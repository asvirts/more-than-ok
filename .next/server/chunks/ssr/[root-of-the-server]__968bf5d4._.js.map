{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///Users/asvirts/dev/more-than-ok/lib/mdx.ts"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\n\nconst postsDirectory = path.join(process.cwd(), 'content/posts')\n\nexport interface Author {\n  firstName: string\n  lastName: string\n  image?: string\n}\n\nexport interface Post {\n  slug: string\n  title: string\n  date: string\n  excerpt: string\n  coverImage?: string\n  author?: Author\n  content: string\n}\n\nexport interface PostMetadata {\n  slug: string\n  title: string\n  date: string\n  excerpt: string\n  coverImage?: string\n  author?: Author\n}\n\n/**\n * Get all MDX posts from the content/posts directory\n */\nexport function getAllPosts(): PostMetadata[] {\n  // Check if directory exists, if not return empty array\n  if (!fs.existsSync(postsDirectory)) {\n    return []\n  }\n\n  const fileNames = fs.readdirSync(postsDirectory)\n  const allPostsData = fileNames\n    .filter((fileName) => fileName.endsWith('.mdx'))\n    .map((fileName) => {\n      const slug = fileName.replace(/\\.mdx$/, '')\n      const fullPath = path.join(postsDirectory, fileName)\n      const fileContents = fs.readFileSync(fullPath, 'utf8')\n      const {data} = matter(fileContents)\n\n      return {\n        slug,\n        title: data.title,\n        date: data.date,\n        excerpt: data.excerpt,\n        coverImage: data.coverImage,\n        author: data.author,\n      } as PostMetadata\n    })\n\n  // Sort posts by date\n  return allPostsData.sort((a, b) => (a.date < b.date ? 1 : -1))\n}\n\n/**\n * Get a single post by slug\n */\nexport function getPostBySlug(slug: string): Post | null {\n  try {\n    const fullPath = path.join(postsDirectory, `${slug}.mdx`)\n    const fileContents = fs.readFileSync(fullPath, 'utf8')\n    const {data, content} = matter(fileContents)\n\n    return {\n      slug,\n      title: data.title,\n      date: data.date,\n      excerpt: data.excerpt,\n      coverImage: data.coverImage,\n      author: data.author,\n      content,\n    }\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Get all post slugs for static generation\n */\nexport function getAllPostSlugs(): {slug: string}[] {\n  if (!fs.existsSync(postsDirectory)) {\n    return []\n  }\n\n  const fileNames = fs.readdirSync(postsDirectory)\n  return fileNames\n    .filter((fileName) => fileName.endsWith('.mdx'))\n    .map((fileName) => ({\n      slug: fileName.replace(/\\.mdx$/, ''),\n    }))\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,iBAAiB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AA8BzC,SAAS;IACd,uDAAuD;IACvD,IAAI,CAAC,wGAAE,CAAC,UAAU,CAAC,iBAAiB;QAClC,OAAO,EAAE;IACX;IAEA,MAAM,YAAY,wGAAE,CAAC,WAAW,CAAC;IACjC,MAAM,eAAe,UAClB,MAAM,CAAC,CAAC,WAAa,SAAS,QAAQ,CAAC,SACvC,GAAG,CAAC,CAAC;QACJ,MAAM,OAAO,SAAS,OAAO,CAAC,UAAU;QACxC,MAAM,WAAW,4GAAI,CAAC,IAAI,CAAC,gBAAgB;QAC3C,MAAM,eAAe,wGAAE,CAAC,YAAY,CAAC,UAAU;QAC/C,MAAM,EAAC,IAAI,EAAC,GAAG,IAAA,kJAAM,EAAC;QAEtB,OAAO;YACL;YACA,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;YACf,SAAS,KAAK,OAAO;YACrB,YAAY,KAAK,UAAU;YAC3B,QAAQ,KAAK,MAAM;QACrB;IACF;IAEF,qBAAqB;IACrB,OAAO,aAAa,IAAI,CAAC,CAAC,GAAG,IAAO,EAAE,IAAI,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC;AAC7D;AAKO,SAAS,cAAc,IAAY;IACxC,IAAI;QACF,MAAM,WAAW,4GAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,IAAI,CAAC;QACxD,MAAM,eAAe,wGAAE,CAAC,YAAY,CAAC,UAAU;QAC/C,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG,IAAA,kJAAM,EAAC;QAE/B,OAAO;YACL;YACA,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;YACf,SAAS,KAAK,OAAO;YACrB,YAAY,KAAK,UAAU;YAC3B,QAAQ,KAAK,MAAM;YACnB;QACF;IACF,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAKO,SAAS;IACd,IAAI,CAAC,wGAAE,CAAC,UAAU,CAAC,iBAAiB;QAClC,OAAO,EAAE;IACX;IAEA,MAAM,YAAY,wGAAE,CAAC,WAAW,CAAC;IACjC,OAAO,UACJ,MAAM,CAAC,CAAC,WAAa,SAAS,QAAQ,CAAC,SACvC,GAAG,CAAC,CAAC,WAAa,CAAC;YAClB,MAAM,SAAS,OAAO,CAAC,UAAU;QACnC,CAAC;AACL","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/asvirts/dev/more-than-ok/app/components/Posts.tsx"],"sourcesContent":["import Link from 'next/link'\n\nimport {getAllPosts, PostMetadata} from '@/lib/mdx'\nimport DateComponent from '@/app/components/Date'\nimport Avatar from '@/app/components/Avatar'\n\nconst PASTEL_COLORS = [\n  'bg-gradient-to-br from-green-200 to-green-100',\n  'bg-gradient-to-br from-pink-200 to-pink-100',\n  'bg-gradient-to-br from-yellow-200 to-yellow-100',\n  'bg-gradient-to-br from-blue-200 to-blue-100',\n  'bg-gradient-to-br from-purple-200 to-purple-100',\n  'bg-gradient-to-br from-orange-200 to-orange-100',\n]\n\nconst Post = ({post, index, featured}: {post: PostMetadata; index: number; featured?: boolean}) => {\n  const {title, slug, excerpt, date, author} = post\n  const colorClass = PASTEL_COLORS[index % PASTEL_COLORS.length]\n\n  return (\n    <article\n      key={slug}\n      className={`${colorClass} rounded-3xl p-8 lg:p-12 flex flex-col justify-between transition-transform hover:scale-[1.02] relative group ${\n        featured ? 'min-h-[500px]' : 'min-h-[280px]'\n      }`}\n    >\n      <div>\n        <div className=\"text-xs uppercase tracking-wider font-semibold text-gray-700 mb-4\">\n          {author && author.firstName && author.lastName\n            ? `${author.firstName} ${author.lastName}`\n            : 'Blog Post'}\n        </div>\n        <h3\n          className={`font-bold mb-4 leading-tight ${\n            featured ? 'text-4xl lg:text-5xl' : 'text-2xl lg:text-3xl'\n          }`}\n        >\n          {title}\n        </h3>\n        {featured && <p className=\"text-lg leading-relaxed text-gray-700 mb-6 max-w-[60ch]\">{excerpt}</p>}\n      </div>\n      <div>\n        <Link\n          className=\"inline-flex items-center gap-2 text-sm font-semibold text-gray-900 group-hover:gap-3 transition-all\"\n          href={`/posts/${slug}`}\n        >\n          Read {featured ? 'blog' : 'post'} â†’\n        </Link>\n      </div>\n    </article>\n  )\n}\n\nconst Posts = ({posts, heading}: {posts: PostMetadata[]; heading?: string}) => {\n  if (posts.length === 0) return null\n\n  // Bento grid layout: first post is featured (large), rest are smaller\n  const [featured, ...others] = posts\n\n  return (\n    <div>\n      {heading && (\n        <h2 className=\"text-3xl font-bold tracking-tight text-white sm:text-4xl lg:text-5xl mb-8\">\n          {heading}\n        </h2>\n      )}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Featured large post */}\n        <div className=\"lg:row-span-2\">\n          <Post post={featured} index={0} featured={true} />\n        </div>\n        {/* Smaller posts on the right */}\n        <div className=\"grid gap-6 grid-cols-1\">\n          {others.slice(0, 2).map((post, idx) => (\n            <Post key={post.slug} post={post} index={idx + 1} />\n          ))}\n        </div>\n        {/* Additional posts below in a grid */}\n        {others.slice(2).map((post, idx) => (\n          <Post key={post.slug} post={post} index={idx + 3} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport const MorePosts = async ({skip, limit}: {skip: string; limit: number}) => {\n  const allPosts = getAllPosts()\n  const filteredPosts = allPosts.filter((post) => post.slug !== skip).slice(0, limit)\n\n  if (filteredPosts.length === 0) {\n    return null\n  }\n\n  return <Posts posts={filteredPosts} heading={`Recent Posts`} />\n}\n\nexport const AllPosts = async () => {\n  const allPosts = getAllPosts()\n\n  if (allPosts.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <h2 className=\"text-2xl font-bold mb-4 text-white\">No posts yet</h2>\n        <p className=\"text-purple-100\">\n          Create your first post by adding a <code className=\"bg-purple-800/30 px-2 py-1 rounded\">.mdx</code> file to{' '}\n          <code className=\"bg-purple-800/30 px-2 py-1 rounded\">content/posts/</code>\n        </p>\n      </div>\n    )\n  }\n\n  return <Posts posts={allPosts} heading=\"Recent Posts\" />\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AAEA;;;;AAIA,MAAM,gBAAgB;IACpB;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAM,OAAO,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAA0D;IAC5F,MAAM,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAC,GAAG;IAC7C,MAAM,aAAa,aAAa,CAAC,QAAQ,cAAc,MAAM,CAAC;IAE9D,qBACE,8OAAC;QAEC,WAAW,GAAG,WAAW,8GAA8G,EACrI,WAAW,kBAAkB,iBAC7B;;0BAEF,8OAAC;;kCACC,8OAAC;wBAAI,WAAU;kCACZ,UAAU,OAAO,SAAS,IAAI,OAAO,QAAQ,GAC1C,GAAG,OAAO,SAAS,CAAC,CAAC,EAAE,OAAO,QAAQ,EAAE,GACxC;;;;;;kCAEN,8OAAC;wBACC,WAAW,CAAC,6BAA6B,EACvC,WAAW,yBAAyB,wBACpC;kCAED;;;;;;oBAEF,0BAAY,8OAAC;wBAAE,WAAU;kCAA2D;;;;;;;;;;;;0BAEvF,8OAAC;0BACC,cAAA,8OAAC,uKAAI;oBACH,WAAU;oBACV,MAAM,CAAC,OAAO,EAAE,MAAM;;wBACvB;wBACO,WAAW,SAAS;wBAAO;;;;;;;;;;;;;OAzBhC;;;;;AA8BX;AAEA,MAAM,QAAQ,CAAC,EAAC,KAAK,EAAE,OAAO,EAA4C;IACxE,IAAI,MAAM,MAAM,KAAK,GAAG,OAAO;IAE/B,sEAAsE;IACtE,MAAM,CAAC,UAAU,GAAG,OAAO,GAAG;IAE9B,qBACE,8OAAC;;YACE,yBACC,8OAAC;gBAAG,WAAU;0BACX;;;;;;0BAGL,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAK,MAAM;4BAAU,OAAO;4BAAG,UAAU;;;;;;;;;;;kCAG5C,8OAAC;wBAAI,WAAU;kCACZ,OAAO,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,MAAM,oBAC7B,8OAAC;gCAAqB,MAAM;gCAAM,OAAO,MAAM;+BAApC,KAAK,IAAI;;;;;;;;;;oBAIvB,OAAO,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,oBAC1B,8OAAC;4BAAqB,MAAM;4BAAM,OAAO,MAAM;2BAApC,KAAK,IAAI;;;;;;;;;;;;;;;;;AAK9B;AAEO,MAAM,YAAY,OAAO,EAAC,IAAI,EAAE,KAAK,EAAgC;IAC1E,MAAM,WAAW,IAAA,yHAAW;IAC5B,MAAM,gBAAgB,SAAS,MAAM,CAAC,CAAC,OAAS,KAAK,IAAI,KAAK,MAAM,KAAK,CAAC,GAAG;IAE7E,IAAI,cAAc,MAAM,KAAK,GAAG;QAC9B,OAAO;IACT;IAEA,qBAAO,8OAAC;QAAM,OAAO;QAAe,SAAS,CAAC,YAAY,CAAC;;;;;;AAC7D;AAEO,MAAM,WAAW;IACtB,MAAM,WAAW,IAAA,yHAAW;IAE5B,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAqC;;;;;;8BACnD,8OAAC;oBAAE,WAAU;;wBAAkB;sCACM,8OAAC;4BAAK,WAAU;sCAAqC;;;;;;wBAAW;wBAAS;sCAC5G,8OAAC;4BAAK,WAAU;sCAAqC;;;;;;;;;;;;;;;;;;IAI7D;IAEA,qBAAO,8OAAC;QAAM,OAAO;QAAU,SAAQ;;;;;;AACzC","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/asvirts/dev/more-than-ok/app/page.tsx"],"sourcesContent":["import {Suspense} from 'react'\nimport Link from 'next/link'\n\nimport {AllPosts} from '@/app/components/Posts'\n\nexport default async function Page() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-400 via-purple-500 to-purple-600\">\n      {/* Decorative clouds */}\n      <div className=\"absolute top-8 left-8 w-20 h-12 bg-white/30 rounded-full blur-sm\"></div>\n      <div className=\"absolute top-12 right-12 w-16 h-10 bg-white/20 rounded-full blur-sm\"></div>\n\n      <div className=\"container py-12 sm:py-20\">\n        <div className=\"mb-16 text-center\">\n          <h1 className=\"text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-bold tracking-tighter text-white mb-4\">\n            <Link\n              className=\"underline decoration-white underline-offset-8 hover:underline-offset-4 transition-all ease-out\"\n              href=\"https://nextjs.org/\"\n            >\n              Next.js\n            </Link>{' '}\n            MDX Blog\n          </h1>\n        </div>\n\n        <aside>\n          <Suspense>{await AllPosts()}</Suspense>\n        </aside>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEe,eAAe;IAC5B,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BAEf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC,uKAAI;oCACH,WAAU;oCACV,MAAK;8CACN;;;;;;gCAEO;gCAAI;;;;;;;;;;;;kCAKhB,8OAAC;kCACC,cAAA,8OAAC,iNAAQ;sCAAE,MAAM,IAAA,uIAAQ;;;;;;;;;;;;;;;;;;;;;;;AAKnC","debugId":null}}]
}