{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///Users/asvirts/dev/more-than-ok/lib/mdx.ts"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\n\nconst postsDirectory = path.join(process.cwd(), 'content/posts')\n\nexport interface Author {\n  firstName: string\n  lastName: string\n  image?: string\n}\n\nexport interface Post {\n  slug: string\n  title: string\n  date: string\n  excerpt: string\n  coverImage?: string\n  author?: Author\n  content: string\n}\n\nexport interface PostMetadata {\n  slug: string\n  title: string\n  date: string\n  excerpt: string\n  coverImage?: string\n  author?: Author\n}\n\n/**\n * Get all MDX posts from the content/posts directory\n */\nexport function getAllPosts(): PostMetadata[] {\n  // Check if directory exists, if not return empty array\n  if (!fs.existsSync(postsDirectory)) {\n    return []\n  }\n\n  const fileNames = fs.readdirSync(postsDirectory)\n  const allPostsData = fileNames\n    .filter((fileName) => fileName.endsWith('.mdx'))\n    .map((fileName) => {\n      const slug = fileName.replace(/\\.mdx$/, '')\n      const fullPath = path.join(postsDirectory, fileName)\n      const fileContents = fs.readFileSync(fullPath, 'utf8')\n      const {data} = matter(fileContents)\n\n      return {\n        slug,\n        title: data.title,\n        date: data.date,\n        excerpt: data.excerpt,\n        coverImage: data.coverImage,\n        author: data.author,\n      } as PostMetadata\n    })\n\n  // Sort posts by date\n  return allPostsData.sort((a, b) => (a.date < b.date ? 1 : -1))\n}\n\n/**\n * Get a single post by slug\n */\nexport function getPostBySlug(slug: string): Post | null {\n  try {\n    const fullPath = path.join(postsDirectory, `${slug}.mdx`)\n    const fileContents = fs.readFileSync(fullPath, 'utf8')\n    const {data, content} = matter(fileContents)\n\n    return {\n      slug,\n      title: data.title,\n      date: data.date,\n      excerpt: data.excerpt,\n      coverImage: data.coverImage,\n      author: data.author,\n      content,\n    }\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Get all post slugs for static generation\n */\nexport function getAllPostSlugs(): {slug: string}[] {\n  if (!fs.existsSync(postsDirectory)) {\n    return []\n  }\n\n  const fileNames = fs.readdirSync(postsDirectory)\n  return fileNames\n    .filter((fileName) => fileName.endsWith('.mdx'))\n    .map((fileName) => ({\n      slug: fileName.replace(/\\.mdx$/, ''),\n    }))\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,iBAAiB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AA8BzC,SAAS;IACd,uDAAuD;IACvD,IAAI,CAAC,wGAAE,CAAC,UAAU,CAAC,iBAAiB;QAClC,OAAO,EAAE;IACX;IAEA,MAAM,YAAY,wGAAE,CAAC,WAAW,CAAC;IACjC,MAAM,eAAe,UAClB,MAAM,CAAC,CAAC,WAAa,SAAS,QAAQ,CAAC,SACvC,GAAG,CAAC,CAAC;QACJ,MAAM,OAAO,SAAS,OAAO,CAAC,UAAU;QACxC,MAAM,WAAW,4GAAI,CAAC,IAAI,CAAC,gBAAgB;QAC3C,MAAM,eAAe,wGAAE,CAAC,YAAY,CAAC,UAAU;QAC/C,MAAM,EAAC,IAAI,EAAC,GAAG,IAAA,kJAAM,EAAC;QAEtB,OAAO;YACL;YACA,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;YACf,SAAS,KAAK,OAAO;YACrB,YAAY,KAAK,UAAU;YAC3B,QAAQ,KAAK,MAAM;QACrB;IACF;IAEF,qBAAqB;IACrB,OAAO,aAAa,IAAI,CAAC,CAAC,GAAG,IAAO,EAAE,IAAI,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC;AAC7D;AAKO,SAAS,cAAc,IAAY;IACxC,IAAI;QACF,MAAM,WAAW,4GAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,IAAI,CAAC;QACxD,MAAM,eAAe,wGAAE,CAAC,YAAY,CAAC,UAAU;QAC/C,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG,IAAA,kJAAM,EAAC;QAE/B,OAAO;YACL;YACA,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;YACf,SAAS,KAAK,OAAO;YACrB,YAAY,KAAK,UAAU;YAC3B,QAAQ,KAAK,MAAM;YACnB;QACF;IACF,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAKO,SAAS;IACd,IAAI,CAAC,wGAAE,CAAC,UAAU,CAAC,iBAAiB;QAClC,OAAO,EAAE;IACX;IAEA,MAAM,YAAY,wGAAE,CAAC,WAAW,CAAC;IACjC,OAAO,UACJ,MAAM,CAAC,CAAC,WAAa,SAAS,QAAQ,CAAC,SACvC,GAAG,CAAC,CAAC,WAAa,CAAC;YAClB,MAAM,SAAS,OAAO,CAAC,UAAU;QACnC,CAAC;AACL","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/asvirts/dev/more-than-ok/app/components/Date.tsx"],"sourcesContent":["import {format} from 'date-fns'\n\nexport default function DateComponent({\n  dateString,\n  className,\n}: {\n  dateString: string | undefined\n  className?: string\n}) {\n  if (!dateString) {\n    return null\n  }\n\n  return (\n    <time dateTime={dateString} className={className}>\n      {format(new Date(dateString), 'MM.dd.yy')}\n    </time>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAEe,SAAS,cAAc,EACpC,UAAU,EACV,SAAS,EAIV;IACC,IAAI,CAAC,YAAY;QACf,OAAO;IACT;IAEA,qBACE,8OAAC;QAAK,UAAU;QAAY,WAAW;kBACpC,IAAA,+JAAM,EAAC,IAAI,KAAK,aAAa;;;;;;AAGpC","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/asvirts/dev/more-than-ok/app/components/Posts.tsx"],"sourcesContent":["import Link from 'next/link'\n\nimport {getAllPosts, PostMetadata} from '@/lib/mdx'\nimport DateComponent from '@/app/components/Date'\nimport Avatar from '@/app/components/Avatar'\n\nconst Post = ({post, index}: {post: PostMetadata; index: number}) => {\n  const {title, slug, excerpt, date, author, coverImage} = post\n\n  return (\n    <article key={slug} className=\"flex flex-col bg-white overflow-hidden group\">\n      {/* Image section */}\n      <Link href={`/posts/${slug}`} className=\"block aspect-[16/9] bg-gray-200 overflow-hidden mb-6\">\n        {coverImage ? (\n          <img src={coverImage} alt={title} className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\" />\n        ) : (\n          <div className=\"w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 group-hover:scale-105 transition-transform duration-300\"></div>\n        )}\n      </Link>\n\n      {/* Content section */}\n      <div className=\"flex flex-col flex-1\">\n        {/* Date and category */}\n        <div className=\"flex items-center gap-4 mb-6\">\n          <DateComponent dateString={date} className=\"text-sm text-gray-900\" />\n          <span className=\"inline-flex items-center px-3 py-1 text-xs font-medium text-[#2d5442] bg-[#c8f4d9] rounded-md uppercase tracking-wide\">\n            Press Releases\n          </span>\n        </div>\n\n        {/* Title */}\n        <Link href={`/posts/${slug}`}>\n          <h3 className=\"text-2xl lg:text-3xl font-normal mb-4 leading-tight text-gray-900 hover:text-[#2d5442] transition-colors\">\n            {title}\n          </h3>\n        </Link>\n\n        {/* Excerpt */}\n        <p className=\"text-base leading-relaxed text-gray-700 mb-6 flex-1\">{excerpt}</p>\n      </div>\n    </article>\n  )\n}\n\nconst Posts = ({posts, heading}: {posts: PostMetadata[]; heading?: string}) => {\n  if (posts.length === 0) return null\n\n  return (\n    <div>\n      {heading && <h2 className=\"text-3xl font-normal tracking-tight text-black mb-2\">{heading}</h2>}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 lg:gap-12\">\n        {posts.map((post, idx) => (\n          <Post key={post.slug} post={post} index={idx} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport const MorePosts = async ({skip, limit}: {skip: string; limit: number}) => {\n  const allPosts = getAllPosts()\n  const filteredPosts = allPosts.filter((post) => post.slug !== skip).slice(0, limit)\n\n  if (filteredPosts.length === 0) {\n    return null\n  }\n\n  return <Posts posts={filteredPosts} heading={`Recent Posts`} />\n}\n\nexport const AllPosts = async () => {\n  const allPosts = getAllPosts()\n\n  if (allPosts.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <h2 className=\"text-2xl font-normal mb-4 text-black\">No posts yet</h2>\n        <p className=\"text-gray-700\">\n          Create your first post by adding a <code className=\"bg-gray-100 px-2 py-1 rounded\">.mdx</code> file to{' '}\n          <code className=\"bg-gray-100 px-2 py-1 rounded\">content/posts/</code>\n        </p>\n      </div>\n    )\n  }\n\n  return <Posts posts={allPosts} />\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AAEA;AACA;;;;;AAGA,MAAM,OAAO,CAAC,EAAC,IAAI,EAAE,KAAK,EAAsC;IAC9D,MAAM,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,GAAG;IAEzD,qBACE,8OAAC;QAAmB,WAAU;;0BAE5B,8OAAC,uKAAI;gBAAC,MAAM,CAAC,OAAO,EAAE,MAAM;gBAAE,WAAU;0BACrC,2BACC,8OAAC;oBAAI,KAAK;oBAAY,KAAK;oBAAO,WAAU;;;;;6EAE5C,8OAAC;oBAAI,WAAU;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,qIAAa;gCAAC,YAAY;gCAAM,WAAU;;;;;;0CAC3C,8OAAC;gCAAK,WAAU;0CAAwH;;;;;;;;;;;;kCAM1I,8OAAC,uKAAI;wBAAC,MAAM,CAAC,OAAO,EAAE,MAAM;kCAC1B,cAAA,8OAAC;4BAAG,WAAU;sCACX;;;;;;;;;;;kCAKL,8OAAC;wBAAE,WAAU;kCAAuD;;;;;;;;;;;;;OA5B1D;;;;;AAgClB;AAEA,MAAM,QAAQ,CAAC,EAAC,KAAK,EAAE,OAAO,EAA4C;IACxE,IAAI,MAAM,MAAM,KAAK,GAAG,OAAO;IAE/B,qBACE,8OAAC;;YACE,yBAAW,8OAAC;gBAAG,WAAU;0BAAuD;;;;;;0BACjF,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,MAAM,oBAChB,8OAAC;wBAAqB,MAAM;wBAAM,OAAO;uBAA9B,KAAK,IAAI;;;;;;;;;;;;;;;;AAK9B;AAEO,MAAM,YAAY,OAAO,EAAC,IAAI,EAAE,KAAK,EAAgC;IAC1E,MAAM,WAAW,IAAA,yHAAW;IAC5B,MAAM,gBAAgB,SAAS,MAAM,CAAC,CAAC,OAAS,KAAK,IAAI,KAAK,MAAM,KAAK,CAAC,GAAG;IAE7E,IAAI,cAAc,MAAM,KAAK,GAAG;QAC9B,OAAO;IACT;IAEA,qBAAO,8OAAC;QAAM,OAAO;QAAe,SAAS,CAAC,YAAY,CAAC;;;;;;AAC7D;AAEO,MAAM,WAAW;IACtB,MAAM,WAAW,IAAA,yHAAW;IAE5B,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAuC;;;;;;8BACrD,8OAAC;oBAAE,WAAU;;wBAAgB;sCACQ,8OAAC;4BAAK,WAAU;sCAAgC;;;;;;wBAAW;wBAAS;sCACvG,8OAAC;4BAAK,WAAU;sCAAgC;;;;;;;;;;;;;;;;;;IAIxD;IAEA,qBAAO,8OAAC;QAAM,OAAO;;;;;;AACvB","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file:///Users/asvirts/dev/more-than-ok/app/page.tsx"],"sourcesContent":["import {Suspense} from 'react'\n\nimport {AllPosts} from '@/app/components/Posts'\n\nexport default async function Page() {\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <div className=\"container py-12 sm:py-20\">\n        <div className=\"mb-16\">\n          <h1 className=\"text-5xl sm:text-6xl md:text-7xl font-normal tracking-tight text-black mb-4 max-w-4xl\">Recent Posts</h1>\n        </div>\n\n        <aside>\n          <Suspense>{await AllPosts()}</Suspense>\n        </aside>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEe,eAAe;IAC5B,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAG,WAAU;kCAAwF;;;;;;;;;;;8BAGxG,8OAAC;8BACC,cAAA,8OAAC,iNAAQ;kCAAE,MAAM,IAAA,uIAAQ;;;;;;;;;;;;;;;;;;;;;;AAKnC","debugId":null}}]
}